// Each row item in a detail view.
@mixin detail-item {
  display: flex;
  flex-direction: column;
  flex: 1;

  // the icon on the left of the item.
  .header {
    padding-left: 0.2em;
    height: 3em;
    margin-bottom: 1em;

    img {
      height: 3.2em;
      display: inline-block;
      vertical-align: middle;
      margin-right: 1em;
    }
    h4 {
      display: inline-block;
      font-weight: 400;
      font-size: 1.4em;
      margin-bottom: 0em;
    }
  }

  // The content of the item
  .content {
    flex: 1;

    li {
      margin: 0.25em 0em;
    }

    h4 {
      margin-top: 0.2em;
      margin-bottom: 0.5em;
    }
  }
}

// The quantity chooser box that is used to pick how much of an item to buy.
// If applicable, it has three choices for presets (small, medium, large) that can be used to
// prefill the box.
.item-quantity {
  margin-right: 0.5em;
  padding-left: 0.2em;
  display: flex;

  input[type=text] {
    flex: 1;
    border-width: 0px;
    line-height: 36px;
  }

  button {
    @include make-button-sm($gray);
    width: 32px;
    padding: 0;
    margin: 0;
    background-color: #FFF;
    border-width: 0px;

    img {
      width: 24px;
    }
  }
}

// The right aligned detail view
.app-detail {
  max-width: 1000px;
  margin: 0px auto;

  // The left-aligned circle-image
  & > img {
    width: $image-size;
    float: left;
    margin-right: 2em;
    border-radius: 50%;
    margin-left: 1em;
  }
  
  h1 {
    line-height: $image-size;
    margin-top: 0.7em;
    margin-bottom: 1em;
  }

  // items within a list displayed in the detail view
  .list-contents-grid {
    list-style-type: none;
    display: flex;
    flex-direction: column;
    width: 100%;

    // no spacing between the bottom of the list and the add new item box
    margin-bottom: 0px;

    // no spacing between card boundry and grid
    padding: 0px;

    li {
      flex: 1;
      line-height: 2em;
      display: flex;
      border-bottom: 1px solid $gray-lighter;
      padding: 0.5em 0.5em 0.5em 20px;

      &.header {
        background-color: $gray-lighter;
      }

      .item-name {
        flex: 2;
        display: flex;

        // expand to take up the rest of the room in the name cell
        input {
          margin-left: 1em;
          margin-right: 1em;
          flex: 1;
          border: 0px;
        }
      }
      .item-quantity {
        flex: 1;
      }
      .item-close {
        margin-right: 24px;
        cursor: pointer;
        font-size: 2em;
        min-width: 0.75em; // align the header titles

        &:hover { color: $red; }
      }
    }
  }

  // Put all cards in here.
  .card-group {
    display: flex;

    // Always give 1em of spacing between cards, and on the margins
    .pt-card {
      margin: 0.5em;

      &:first-child { margin-left: 1em; }
      &:last-child { margin-right: 1em; }
    }
  }

  // add new search box
  // for adding things to the list
  .add-new-search-box {
    display: flex;
    width: 100%;

    .Select, .Select.item-is-selected + .quantity-box {
      @include custom-font;
      padding: 0.5em 20px 0px 24px;
      border-bottom: 1px solid $gray-lighter;
      flex: 1;
      display: flex;

      // The part where the user inputs the content
      .item-quantity {
        border: 0px;
        flex: 1;
      }

      // The "accept" button
      & > button {
        @include make-button-sm($gray);
        text-align: center; // make sure padding on both left and right is the same
      }

      // When the quantity isn't complete, don't show the accept button
      &.bad-quantity > button { display: none; }
    }

    // The box used to select the type of item to add.
    // By default, show the select box
    .Select {
      .Select-control {
        border: 0px;
        padding-bottom: 0.5em;
        .Select-placeholder, .Select-input {
          padding-left: 0px;
          line-height: 36px;
        }
      }
    }

    // When the select has an item selected, instead show the the quantity box
    .Select.item-is-selected { display: none; }
    .Select.item-is-selected + .quantity-box {
      padding-bottom: 0.5em;
      line-height: 36px;
    }
  }

  // Custom quantity
  .custom-quantity {
    @include detail-item;

    ul {
      list-style-type: none;
      padding-left: 0em;

      li {
        input[type=radio] {
          background-color: $gray-light;
          margin-right: 0.5em;
        }
      }
    }

    .custom-quantity-tags {
      padding-top: 0.5em;
      .ReactTags__tag {
        line-height: 1em;
      }
    }
  }

  // Image dropzine. Used to 
  $dropzone-height: 150px;
  .image-dropzone {
    height: $dropzone-height;
    border-width: 2px;
    color: $gray-lighter;
    border-color: $gray-lighter;
    border-style: dashed;
    border-radius: $border-radius;
    cursor: pointer;

    margin-top: 24px;
    margin-left: 20px;
    padding: 10px;

    text-align: center;
    line-height: $dropzone-height;
    font-size: 2em;
    width: calc(100% - 68px);

    &.reject {
      border-style: solid;
      background-color: #ffdddd;
    }
    &.active {
      border-style: solid;
      background-color: #eee;
    }
  }
}


// Custom preset quantity
// These are the "circle icons" that represent sizes that are attached to given items
.custom-quantity-presets {
  @include detail-item;

  ul {
    list-style-type: none;
    padding-left: 0em;

    li {
      display: flex;
      width: 100%;

      img {
        height: 2em;
        margin-right: 0.5em;
      }
      input[type=text] {
        margin-bottom: 0.2em;
        height: 2em;
        flex: 1;
      }
    }
  }
}
